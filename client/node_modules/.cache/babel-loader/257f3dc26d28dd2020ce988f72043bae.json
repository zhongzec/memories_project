{"ast":null,"code":"var _jsxFileName = \"/Users/zhongzechen/memories_project/client/src/components/createStudent/createAgent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n})); //In Rreact function, the first letter assignment has to be uppercase!\n\nexport default function CreateStudent() {\n  _s();\n\n  const classes = useStyles();\n  const [agent, setAgent] = useState({\n    email: '',\n    name: '',\n    memberID: '',\n    gender: ''\n  });\n\n  const createButtonCallback = event => {\n    event.preventDefault();\n    axios.post('http://localhost:5000/agents', agent).then(res => {\n      console.log(res); //window.location.reload(false);\n    }).catch(error => {\n      console.log(error.response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Email Address\",\n        variant: \"outlined\",\n        value: agent.email,\n        onChange: event => setAgent({ ...agent,\n          email: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Agent Name\",\n        variant: \"outlined\",\n        value: agent.name,\n        onChange: event => setAgent({ ...agent,\n          name: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Agent ID\",\n        variant: \"outlined\",\n        value: agent.memberID,\n        onChange: event => setAgent({ ...agent,\n          memberID: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"gender\",\n        variant: \"outlined\",\n        value: agent.gender,\n        onChange: event => setAgent({ ...agent,\n          gender: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: createButtonCallback,\n        children: \"CREAT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateStudent, \"YCgO+T7b+kvafAl2Wpoc6tx5y3A=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreateStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateStudent\");","map":{"version":3,"sources":["/Users/zhongzechen/memories_project/client/src/components/createStudent/createAgent.js"],"names":["React","useState","makeStyles","TextField","Button","axios","useStyles","theme","root","margin","spacing","width","CreateStudent","classes","agent","setAgent","email","name","memberID","gender","createButtonCallback","event","preventDefault","post","then","res","console","log","catch","error","response","target","value"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\n//In Rreact function, the first letter assignment has to be uppercase!\nexport default function CreateStudent() {\n  const classes = useStyles();\n\n  const [agent, setAgent] = useState({\n      email:'',\n      name:'',\n      memberID:'',\n      gender:''\n  });\n\n  const createButtonCallback = (event) => {\n      event.preventDefault()\n      axios.post('http://localhost:5000/agents',agent)\n      .then(res=>{\n        console.log(res);\n        //window.location.reload(false);\n      })\n      .catch(error=>{\n        console.log(error.response);\n      }\n      )\n  };\n\n  return (\n    <div>\n    <h2>Create Student</h2>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n    <TextField id=\"outlined-basic\" label=\"Email Address\" variant=\"outlined\" value= {agent.email} onChange={(event) => setAgent({...agent,email: event.target.value})}/>\n    <TextField id=\"outlined-basic\" label=\"Agent Name\" variant=\"outlined\" value= {agent.name} onChange={(event) => setAgent({...agent,name: event.target.value})}/>\n    <TextField id=\"outlined-basic\" label=\"Agent ID\" variant=\"outlined\" value= {agent.memberID} onChange={(event) => setAgent({...agent,memberID: event.target.value})}/>\n    <TextField id=\"outlined-basic\" label=\"gender\" variant=\"outlined\" value= {agent.gender} onChange={(event) => setAgent({...agent,gender: event.target.value})}/>\n    <Button variant=\"contained\" color=\"primary\" onClick={createButtonCallback}>CREAT</Button>\n    </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}